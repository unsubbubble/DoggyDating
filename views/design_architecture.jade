extends auth_base.jade
block content
    h2.center-text Design & Architecture
    br
    br
    p.center-text The project uses a simple model, view, controller architecture. The controllers are broken into two sections, Auth and UnAuth. The Auth section handles all users requests once a user is logged in and does additional checks. The UnAuth section is accessible by both authorised and anonymous clients. The routes section handles url requests and redirects to these controllers. The controllers then access the models, found in userModels.js. The app uses 4 models, User (for user details), Dog (for dog details), Matches (for match details, and Messages (for message details). The controllers then sometimes refer to helper functions with particularly complex operations or when validation is required. These helper functions then use a callback to return to the controller. If all the checks have completed successfully then the controller access the appropriate views file and renders it to the page, or redirects appropriately. Many pages have separate POST and GET controllers. If an error is found the page is rendered with an appropriate error message and logs are recorded. This was used a lot with manual testing. The biggest difficulty we faced was working in a team environment and time management. This prevented us from developing more streamlined validation and error callbacks as well as implementing live updates for notifications and messages. With further time, or increased productivity this could have been achieved.